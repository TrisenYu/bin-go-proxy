// SPDX-LICENSE-IDENTIFIER: GPL-2.0-ONLY
// (C) 2024 Author: <kisfg@hotmail.com>
package cryptoprotect

/*
Explanation of crypto-suite:

	Temporarily define crypto-suite-numno as a 4 bytes number.
	The 4 bytes are allocated for asymmetric encryption method, stream cipher, hash function and compression algorithm.
	Client application should provide logining proxy for crypto-suite-numno, protocol version and access-token
	And that shake hand. Once the crypto-suite-numno is utilized, there is no operation for altering crypto methods
	Excepct disconnecting from proxy and redoing.
*/
type (
	asymmetric_cipher_choice uint // asymmetric crypto alias
	stream_cipher_choice     uint // stream crypto alias
	hash_cipher_choice       uint // hash crypto alias
	compressed_choice        uint // alias for certain algorithm compression
)

const (
	// TODO: Lattice encryption embedding to asymmetric cipher suite.
	PICK_SM2              asymmetric_cipher_choice = iota + 1  // sm2 asymmetric cipher
	PICK_ZUC              stream_cipher_choice     = iota - 1  // zuc stream cipher
	PICK_SALSA20                                               // salsa20 stream cipher
	PICK_AES_OFB_256                                           // aes-output-feedback-256 cipher
	PICK_AES_CTR_256                                           // aes-couter-mode-256 cipher
	PICK_AES_GCM_256                                           // aes-galois-counter-mode cipher
	PICK_SM4_OFB_128                                           // sm4-output-feedback-256 cipher
	PICK_SM4_CTR_128                                           // sm4-couter-mode-256 cipher
	PICK_SM4_GCM_128                                           // sm4-galois-counter-mode cipher
	PICK_CHACHA20POLY_256                                      // chacha20-poly1305 cipher
	PICK_SM3              hash_cipher_choice       = iota - 9  // sm3 hash
	PICK_SHA256                                                // sha256
	PICK_SHA3_256                                              // sha3-256
	PICK_SHA384                                                // sha384
	PICK_SHA3_384                                              // sha3-384
	PICK_SHA512                                                // sha384
	PICK_SHA3_512                                              // sha3-384
	PICK_BLAKE2B256                                            // blake2b256
	PICK_BLAKE2S256                                            // blake2s256
	PICK_BLAKE2B384                                            // blake2b384
	PICK_BLAKE2B512                                            // blake2b512
	PICK_NULL_COMP        compressed_choice        = iota - 20 // identical mapping. no need for compression algorithm
	PICK_ZLIB_COMP                                             // zlib compression
)

var AESBoxVariant = [...]byte{
	0x7C, 0xE3, 0x39, 0x82, 0x9B, 0x2F, 0xFF, 0x87, 0x34, 0x8E, 0x43, 0x44, 0xC4, 0xDE, 0xE9, 0xCB,
	0x54, 0x7B, 0x94, 0x32, 0xA6, 0xC2, 0x23, 0x3D, 0xEE, 0x4C, 0x95, 0x0B, 0x42, 0xFA, 0xC3, 0x4E,
	0x08, 0x2E, 0xA1, 0x66, 0x28, 0xD9, 0x24, 0xB2, 0x76, 0x5B, 0xA2, 0x49, 0x6D, 0x8B, 0xD1, 0x25,
	0x72, 0xF8, 0xF6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xD4, 0xA4, 0x5C, 0xCC, 0x5D, 0x65, 0xB6, 0x92,
	0x6C, 0x70, 0x48, 0x50, 0xFD, 0xED, 0xB9, 0xDA, 0x5E, 0x15, 0x46, 0x57, 0xA7, 0x8D, 0x9D, 0x84,
	0x90, 0xD8, 0xAB, 0x00, 0x8C, 0xBC, 0xD3, 0x0A, 0xF7, 0xE4, 0x58, 0x05, 0xB8, 0xB3, 0x45, 0x06,
	0xD0, 0x2C, 0x1E, 0x8F, 0xCA, 0x3F, 0x0F, 0x02, 0xC1, 0xAF, 0xBD, 0x03, 0x01, 0x13, 0x8A, 0x6B,
	0x3A, 0x91, 0x11, 0x41, 0x4F, 0x67, 0xDC, 0xEA, 0x97, 0xF2, 0xCF, 0xCE, 0xF0, 0xB4, 0xE6, 0x73,
	0x96, 0xAC, 0x74, 0x22, 0xE7, 0xAD, 0x35, 0x85, 0xE2, 0xF9, 0x37, 0xE8, 0x1C, 0x75, 0xDF, 0x6E,
	0x47, 0xF1, 0x1A, 0x71, 0x1D, 0x29, 0xC5, 0x89, 0x6F, 0xB7, 0x62, 0x0E, 0xAA, 0x18, 0xBE, 0x1B,
	0xFC, 0x56, 0x3E, 0x4B, 0xC6, 0xD2, 0x79, 0x20, 0x9A, 0xDB, 0xC0, 0xFE, 0x78, 0xCD, 0x5A, 0xF4,
	0x52, 0x09, 0x6A, 0xD5, 0x30, 0x36, 0xA5, 0x38, 0xBF, 0x40, 0xA3, 0x9E, 0x81, 0xF3, 0xD7, 0xFB,
	0x1F, 0xDD, 0xA8, 0x33, 0x88, 0x07, 0xC7, 0x31, 0xB1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xEC, 0x5F,
	0x60, 0x51, 0x7F, 0xA9, 0x19, 0xB5, 0x4A, 0x0D, 0x2D, 0xE5, 0x7A, 0x9F, 0x93, 0xC9, 0x9C, 0xEF,
	0xA0, 0xE0, 0x3B, 0x4D, 0xAE, 0x2A, 0xF5, 0xB0, 0xC8, 0xEB, 0xBB, 0x3C, 0x83, 0x53, 0x99, 0x61,
	0x17, 0x2B, 0x04, 0x7E, 0xBA, 0x77, 0xD6, 0x26, 0xE1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0C, 0x7D,
}
